import path from 'node:path';
import chokidar from 'chokidar';
import { getStat } from 'recursive-readdir-files';
import { run, createHTML } from './utils/utils.js';
export default async function watch(options) {
    await run(options);
    const homeMdPath = path.resolve(process.cwd(), 'README.md');
    const inputMDPath = path.resolve(process.cwd(), options.config.inputDir);
    const assetsPath = path.resolve(process.cwd(), 'assets');
    const watcher = chokidar.watch([homeMdPath, inputMDPath, assetsPath], {
        ignored: /(^|[\/\\])\../, // ignore dotfiles
        persistent: true,
    });
    watcher
        .on('change', async (filepath) => {
        if (filepath.endsWith('.md')) {
            const stats = await getStat(filepath);
            createHTML([stats], options);
        }
        console.log(`♻️ \x1b[32;1m ${path.relative(process.cwd(), filepath)} \x1b[0m`);
    })
        .on('error', (error) => console.log(`Watcher error: ${error}`));
}
